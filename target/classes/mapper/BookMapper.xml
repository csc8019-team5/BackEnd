<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="uk.ac.ncl.team5project.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="uk.ac.ncl.team5project.entity.Book">
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="publishing_house" jdbcType="VARCHAR" property="publishingHouse" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="book_cover" jdbcType="VARCHAR" property="bookCover" />
    <result column="available" jdbcType="BIT" property="available" />
    <result column="keyfeature" jdbcType="VARCHAR" property="keyfeature" />
    <result column="available_number" jdbcType="INTEGER" property="availableNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_id, `name`, category, author, publishing_house, description, book_cover, available, 
    keyfeature, available_number
  </sql>
  <select id="selectByExample" parameterType="uk.ac.ncl.team5project.entity.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BOOK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from BOOK
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from BOOK
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="uk.ac.ncl.team5project.entity.BookExample">
    delete from BOOK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="uk.ac.ncl.team5project.entity.Book">
    insert into BOOK (book_id, `name`, category, 
      author, publishing_house, description, 
      book_cover, available, keyfeature, 
      available_number)
    values (#{bookId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{publishingHouse,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{bookCover,jdbcType=VARCHAR}, #{available,jdbcType=BIT}, #{keyfeature,jdbcType=VARCHAR}, 
      #{availableNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="uk.ac.ncl.team5project.entity.Book">
    insert into BOOK
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="publishingHouse != null">
        publishing_house,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="bookCover != null">
        book_cover,
      </if>
      <if test="available != null">
        available,
      </if>
      <if test="keyfeature != null">
        keyfeature,
      </if>
      <if test="availableNumber != null">
        available_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publishingHouse != null">
        #{publishingHouse,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="bookCover != null">
        #{bookCover,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=BIT},
      </if>
      <if test="keyfeature != null">
        #{keyfeature,jdbcType=VARCHAR},
      </if>
      <if test="availableNumber != null">
        #{availableNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="uk.ac.ncl.team5project.entity.BookExample" resultType="java.lang.Long">
    select count(*) from BOOK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update BOOK
    <set>
      <if test="row.bookId != null">
        book_id = #{row.bookId,jdbcType=INTEGER},
      </if>
      <if test="row.name != null">
        `name` = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.category != null">
        category = #{row.category,jdbcType=VARCHAR},
      </if>
      <if test="row.author != null">
        author = #{row.author,jdbcType=VARCHAR},
      </if>
      <if test="row.publishingHouse != null">
        publishing_house = #{row.publishingHouse,jdbcType=VARCHAR},
      </if>
      <if test="row.description != null">
        description = #{row.description,jdbcType=VARCHAR},
      </if>
      <if test="row.bookCover != null">
        book_cover = #{row.bookCover,jdbcType=VARCHAR},
      </if>
      <if test="row.available != null">
        available = #{row.available,jdbcType=BIT},
      </if>
      <if test="row.keyfeature != null">
        keyfeature = #{row.keyfeature,jdbcType=VARCHAR},
      </if>
      <if test="row.availableNumber != null">
        available_number = #{row.availableNumber,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update BOOK
    set book_id = #{row.bookId,jdbcType=INTEGER},
      `name` = #{row.name,jdbcType=VARCHAR},
      category = #{row.category,jdbcType=VARCHAR},
      author = #{row.author,jdbcType=VARCHAR},
      publishing_house = #{row.publishingHouse,jdbcType=VARCHAR},
      description = #{row.description,jdbcType=VARCHAR},
      book_cover = #{row.bookCover,jdbcType=VARCHAR},
      available = #{row.available,jdbcType=BIT},
      keyfeature = #{row.keyfeature,jdbcType=VARCHAR},
      available_number = #{row.availableNumber,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="uk.ac.ncl.team5project.entity.Book">
    update BOOK
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publishingHouse != null">
        publishing_house = #{publishingHouse,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="bookCover != null">
        book_cover = #{bookCover,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=BIT},
      </if>
      <if test="keyfeature != null">
        keyfeature = #{keyfeature,jdbcType=VARCHAR},
      </if>
      <if test="availableNumber != null">
        available_number = #{availableNumber,jdbcType=INTEGER},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="uk.ac.ncl.team5project.entity.Book">
    update BOOK
    set `name` = #{name,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publishing_house = #{publishingHouse,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      book_cover = #{bookCover,jdbcType=VARCHAR},
      available = #{available,jdbcType=BIT},
      keyfeature = #{keyfeature,jdbcType=VARCHAR},
      available_number = #{availableNumber,jdbcType=INTEGER}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
</mapper>