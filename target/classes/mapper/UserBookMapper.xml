<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="uk.ac.ncl.team5project.mapper.UserBookMapper">
  <resultMap id="BaseResultMap" type="uk.ac.ncl.team5project.entity.UserBook">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="borrow_date" jdbcType="DATE" property="borrowDate" />
    <result column="return_date_estimated" jdbcType="DATE" property="returnDateEstimated" />
    <result column="return_date" jdbcType="DATE" property="returnDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, book_id, borrow_date, return_date_estimated, return_date
  </sql>
  <select id="selectByExample" parameterType="uk.ac.ncl.team5project.entity.UserBookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from USER_BOOK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from USER_BOOK
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from USER_BOOK
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="uk.ac.ncl.team5project.entity.UserBookExample">
    delete from USER_BOOK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="uk.ac.ncl.team5project.entity.UserBook">
    insert into USER_BOOK (id, user_id, book_id, 
      borrow_date, return_date_estimated, return_date
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, 
      #{borrowDate,jdbcType=DATE}, #{returnDateEstimated,jdbcType=DATE}, #{returnDate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="uk.ac.ncl.team5project.entity.UserBook">
    insert into USER_BOOK
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="borrowDate != null">
        borrow_date,
      </if>
      <if test="returnDateEstimated != null">
        return_date_estimated,
      </if>
      <if test="returnDate != null">
        return_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="borrowDate != null">
        #{borrowDate,jdbcType=DATE},
      </if>
      <if test="returnDateEstimated != null">
        #{returnDateEstimated,jdbcType=DATE},
      </if>
      <if test="returnDate != null">
        #{returnDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="uk.ac.ncl.team5project.entity.UserBookExample" resultType="java.lang.Long">
    select count(*) from USER_BOOK
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update USER_BOOK
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=INTEGER},
      </if>
      <if test="row.bookId != null">
        book_id = #{row.bookId,jdbcType=INTEGER},
      </if>
      <if test="row.borrowDate != null">
        borrow_date = #{row.borrowDate,jdbcType=DATE},
      </if>
      <if test="row.returnDateEstimated != null">
        return_date_estimated = #{row.returnDateEstimated,jdbcType=DATE},
      </if>
      <if test="row.returnDate != null">
        return_date = #{row.returnDate,jdbcType=DATE},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update USER_BOOK
    set id = #{row.id,jdbcType=INTEGER},
      user_id = #{row.userId,jdbcType=INTEGER},
      book_id = #{row.bookId,jdbcType=INTEGER},
      borrow_date = #{row.borrowDate,jdbcType=DATE},
      return_date_estimated = #{row.returnDateEstimated,jdbcType=DATE},
      return_date = #{row.returnDate,jdbcType=DATE}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="uk.ac.ncl.team5project.entity.UserBook">
    update USER_BOOK
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="borrowDate != null">
        borrow_date = #{borrowDate,jdbcType=DATE},
      </if>
      <if test="returnDateEstimated != null">
        return_date_estimated = #{returnDateEstimated,jdbcType=DATE},
      </if>
      <if test="returnDate != null">
        return_date = #{returnDate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="uk.ac.ncl.team5project.entity.UserBook">
    update USER_BOOK
    set user_id = #{userId,jdbcType=INTEGER},
      book_id = #{bookId,jdbcType=INTEGER},
      borrow_date = #{borrowDate,jdbcType=DATE},
      return_date_estimated = #{returnDateEstimated,jdbcType=DATE},
      return_date = #{returnDate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>